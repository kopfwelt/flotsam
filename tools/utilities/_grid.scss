/**
 * Grids with flexbox
 */

.Grid {
	display: flex;
	flex-flow: row wrap;
}

// Modifiers
.Grid--alignCenter {
	justify-content: center;
}
.Grid--alignRight {
	justify-content: flex-end;
}
.Grid--space {
	justify-content: space-between;
}
.Grid--alignMiddle {
	align-items: center;
}
.Grid--alignBottom {
	align-items: flex-end;
}
.Grid--center {
	justify-content: center;
	align-items: center;
}
.Grid--nowrap {
	flex-wrap: nowrap;
}


.Grid-img {
	img {
		width: 100%
	}
}

/**
 * Grid cells
 */

.Grid-cell {
	// full-width by default
	flex: 0 0 100%;
}

// Modifiers
.Grid-cell--first {
	order: -1;
}
.Grid-cell--last {
	order: 999;
}

// reverse the grids order on tablets
.Grid-cell--reverse {
	display: flex;
	flex-flow: column;
	@media (min-width: $layout-s) {
		flex-direction: row-reverse;
	}
	@media (min-width: $layout-m) {
		flex-direction: inherit;
	}
}

// @todo: it's way more specific than just 'reverse the first'. I would suggest to give it a special and not so dynamic name, since it apparently really isn't a dynamic/usual case on the rest of the page
.Grid-cell--reverseTheFirst {
	display: flex;
	flex-flow: row wrap;

	.Grid-cell--2of4 {
		flex-basis: 100%;
		order: -1;

		@media (min-width: $layout-m) {
			order: inherit;
			flex-basis: 50%;
		}
	}
}

/**
 * Grid sizes
 * (this only works because our grids don't have gutters at GB â€” @todo replace with Susy)
 */

@mixin flexWidth($width) {
	// width: $width;
	flex-basis: $width;
}

.Grid-cell--1of2 {
	@include flexWidth((2/2)*100%);
	@media (min-width: $layout-m) {
		@include flexWidth((1/2)*100%);
	}
}
.Grid-cell--2of2 {
	@include flexWidth((2/2)*100%);
	flex-direction: column; //in case there is more than one element inside
	@media (min-width: $layout-m) {
		flex-flow: row wrap;
	}
}
.Grid-cell--1of3 {
	@include flexWidth((1/3)*100%);
}
.Grid-cell--2of3 {
	@include flexWidth((2/3)*100%);
}
.Grid-cell--1of4 {
	@include flexWidth(100%);
	@media (min-width: $layout-s) {
		@include flexWidth(50%);
	}
	@media (min-width: $layout-m) {
		@include flexWidth(25%);
	}
}
.Grid-cell--2of4 {
	@include flexWidth(50%);
}
.Grid-cell--3of4 {
	@include flexWidth(75%);
}
.Grid-cell--4of4 {
	@include flexWidth(100%);
}
.Grid-cell--1of6 {
	@include flexWidth((1/6)*100%);
}
.Grid-cell--5of6 {
	@include flexWidth((5/6)*100%);
}
.Grid-cell--1of8 {
	@include flexWidth((1/8)*100%);
}
.Grid-cell--3of8 {
	@include flexWidth((3/8)*100%);
}
.Grid-cell--1of10 {
	@include flexWidth((1/10)*100%);
}

/**
 * Starting to set do all grid classes has utilities so you may see double with the Grid modifier classes
 */

.u-gridcenter {
	justify-content: center;
	align-items: center;
}

/**
 * @define utilities
 * Size: all!
 */

[class*="u-size"] {
  flex-basis: auto !important;
}

.u-size1of12 {
	width: calc(100% * 1 / 12) !important;

}
.u-size1of10 {
	width: 10% !important;

}
.u-size1of8 {
	width: 12.5% !important;

}
.u-size1of6,
.u-size2of12 {
	width: calc(100% * 1 / 6) !important;

}
.u-size1of5,
.u-size2of10 {
	width: 20% !important;

}
.u-size1of4,
.u-size2of8,
.u-size3of12 {
	width: 25% !important;

}
.u-size3of10 {
	width: 30% !important;

}
.u-size1of3,
.u-size2of6,
.u-size4of12 {
	width: calc(100% * 1 / 3) !important;

}
.u-size3of8 {
	width: 37.5% !important;

}
.u-size2of5,
.u-size4of10 {
	width: 40% !important;

}
.u-size5of12 {
	width: calc(100% * 5 / 12) !important;

}
.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
	width: 50% !important;

}
.u-size7of12 {
	width: calc(100% * 7 / 12) !important;

}
.u-size3of5,
.u-size6of10 {
	width: 60% !important;

}
.u-size5of8 {
	width: 62.5% !important;

}
.u-size2of3,
.u-size4of6,
.u-size8of12 {
	width: calc(100% * 2 / 3) !important;

}
.u-size7of10 {
	width: 70% !important;

}
.u-size3of4,
.u-size6of8,
.u-size9of12 {
	width: 75% !important;

}
.u-size4of5,
.u-size8of10 {
	width: 80% !important;

}
.u-size5of6,
.u-size10of12 {
	width: calc(100% * 5 / 6) !important;

}
.u-size7of8 {
	width: 87.5% !important;

}
.u-size9of10 {
	width: 90% !important;

}
.u-size11of12 {
	width: calc(100% * 11 / 12) !important;

}

/* Intrinsic widths
	 ========================================================================== */

/**
 * Make an element fill the remaining space.
 *
 * 1. Be explicit to work around IE10 bug with shorthand flex - http://git.io/vllC7
 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes - http://git.io/vllMt
 */

.u-sizeFill {
	flex: 1 1 0% !important; /* 1 */
	flex-basis: 0% !important; /* 2 */
}

/**
 * An alternative method to make an element fill the remaining space.
 * Distributes space based on the initial width and height of the element
 *
 * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
 */

.u-sizeFillAlt {
	flex: 1 1 auto !important;

}

/**
 * Make an element the width of its parent.
 */

.u-sizeFull {
	box-sizing: border-box !important;
	width: 100% !important;
}

/**
 * Hide an element
 */

.u-hide {
	display: none;
}

/**
 * @define utilities
 * Size: breakpoint 1 (small= > 0 < 660px)
 */

@media (min-width: 0) and  (max-width: $layout-sm) {

	/* Proportional widths: breakpoint 1 (small= > 0 < 660px)
		 ========================================================================== */

	/**
	 * Specify the proportional width of an object.
	 * Intentional redundancy build into each set of unit classes.
	 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
	 *
	 * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
	 *    http://git.io/vllMD
	 */

	/* postcss-bem-linter: ignore */
	[class*="u-sm-size"] {
		flex-basis: auto !important; /* 1 */
	}
	.u-sm-size1of12 {
		width: calc(100% * 1 / 12) !important;
	}
	.u-sm-size1of10 {
		width: 10% !important;
	}
	.u-sm-size1of8 {
		width: 12.5% !important;
	}
	.u-sm-size1of6,
	.u-sm-size2of12 {
		width: calc(100% * 1 / 6) !important;
	}
	.u-sm-size1of5,
	.u-sm-size2of10 {
		width: 20% !important;
	}
	.u-sm-size1of4,
	.u-sm-size2of8,
	.u-sm-size3of12 {
		width: 25% !important;
	}
	.u-sm-size3of10 {
		width: 30% !important;
	}
	.u-sm-size1of3,
	.u-sm-size2of6,
	.u-sm-size4of12 {
		width: calc(100% * 1 / 3) !important;
	}
	.u-sm-size3of8 {
		width: 37.5% !important;
	}
	.u-sm-size2of5,
	.u-sm-size4of10 {
		width: 40% !important;
	}
	.u-sm-size5of12 {
		width: calc(100% * 5 / 12) !important;
	}
	.u-sm-size1of2,
	.u-sm-size2of4,
	.u-sm-size3of6,
	.u-sm-size4of8,
	.u-sm-size5of10,
	.u-sm-size6of12 {
		width: 50% !important;
	}
	.u-sm-size7of12 {
		width: calc(100% * 7 / 12) !important;
	}
	.u-sm-size3of5,
	.u-sm-size6of10 {
		width: 60% !important;
	}
	.u-sm-size5of8 {
		width: 62.5% !important;
	}
	.u-sm-size2of3,
	.u-sm-size4of6,
	.u-sm-size8of12 {
		width: calc(100% * 2 / 3) !important;
	}
	.u-sm-size7of10 {
		width: 70% !important;
	}
	.u-sm-size3of4,
	.u-sm-size6of8,
	.u-sm-size9of12 {
		width: 75% !important;
	}
	.u-sm-size4of5,
	.u-sm-size8of10 {
		width: 80% !important;
	}
	.u-sm-size5of6,
	.u-sm-size10of12 {
		width: calc(100% * 5 / 6) !important;
	}
	.u-sm-size7of8 {
		width: 87.5% !important;
	}
	.u-sm-size9of10 {
		width: 90% !important;
	}
	.u-sm-size11of12 {
		width: calc(100% * 11 / 12) !important;
	}

	/* Intrinsic widths
		 ========================================================================== */

	/**
	 * Make an element fill the remaining space.
	 *
	 * 1. Be explicit to work around IE10 bug with shorthand flex - http://git.io/vllC7
	 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes - http://git.io/vllMt
	 */

	.u-sm-sizeFill {
		flex: 1 1 0% !important; /* 1 */
		flex-basis: 0% !important; /* 2 */
	}

	/**
	 * An alternative method to make an element fill the remaining space.
	 * Distributes space based on the initial width and height of the element
	 *
	 * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
	 */

	.u-sm-sizeFillAlt {
		flex: 1 1 auto !important;

	}

	/**
	 * Make an element the width of its parent.
	 */

	.u-sm-sizeFull {
		box-sizing: border-box !important;
		width: 100% !important;
	}

	/**
	 * Hide an element
	 */

	.u-sm-hide {
		display: none;
	}
}

/**
 * @define utilities
 * Size: breakpoint 2 (medium=  > 660px < 1024px)
 */

@media (min-width: $layout-sm) and (max-width: $layout-ml) {

	/* Proportional widths: breakpoint 2 (medium=  > 660px < 1024px)
		 ========================================================================== */

	/**
	 * Specify the proportional width of an object.
	 * Intentional redundancy build into each set of unit classes.
	 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
	 *
	 * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
	 *    http://git.io/vllMD
	 */

	/* postcss-bem-linter: ignore */
	[class*="u-md-size"] {
		flex-basis: auto !important; /* 1 */
	}
	.u-md-size1of12 {
		width: calc(100% * 1 / 12) !important;

	}
	.u-md-size1of10 {
		width: 10% !important;

	}
	.u-md-size1of8 {
		width: 12.5% !important;

	}
	.u-md-size1of6,
	.u-md-size2of12 {
		width: calc(100% * 1 / 6) !important;

	}
	.u-md-size1of5,
	.u-md-size2of10 {
		width: 20% !important;

	}
	.u-md-size1of4,
	.u-md-size2of8,
	.u-md-size3of12 {
		width: 25% !important;

	}
	.u-md-size3of10 {
		width: 30% !important;

	}
	.u-md-size1of3,
	.u-md-size2of6,
	.u-md-size4of12 {
		width: calc(100% * 1 / 3) !important;

	}
	.u-md-size3of8 {
		width: 37.5% !important;

	}
	.u-md-size2of5,
	.u-md-size4of10 {
		width: 40% !important;

	}
	.u-md-size5of12 {
		width: calc(100% * 5 / 12) !important;

	}
	.u-md-size1of2,
	.u-md-size2of4,
	.u-md-size3of6,
	.u-md-size4of8,
	.u-md-size5of10,
	.u-md-size6of12 {
		width: 50% !important;

	}
	.u-md-size7of12 {
		width: calc(100% * 7 / 12) !important;

	}
	.u-md-size3of5,
	.u-md-size6of10 {
		width: 60% !important;

	}
	.u-md-size5of8 {
		width: 62.5% !important;

	}
	.u-md-size2of3,
	.u-md-size4of6,
	.u-md-size8of12 {
		width: calc(100% * 2 / 3) !important;

	}
	.u-md-size7of10 {
		width: 70% !important;

	}
	.u-md-size3of4,
	.u-md-size6of8,
	.u-md-size9of12 {
		width: 75% !important;

	}
	.u-md-size4of5,
	.u-md-size8of10 {
		width: 80% !important;

	}
	.u-md-size5of6,
	.u-md-size10of12 {
		width: calc(100% * 5 / 6) !important;

	}
	.u-md-size7of8 {
		width: 87.5% !important;

	}
	.u-md-size9of10 {
		width: 90% !important;

	}
	.u-md-size11of12 {
		width: calc(100% * 11 / 12) !important;

	}

	/* Intrinsic widths
		 ========================================================================== */

	/**
	 * Make an element fill the remaining space.
	 *
	 * 1. Be explicit to work around IE10 bug with shorthand flex - http://git.io/vllC7
	 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes - http://git.io/vllMt
	 */

	.u-md-sizeFill {
		flex: 1 1 0% !important; /* 1 */
		flex-basis: 0% !important; /* 2 */
	}

	/**
	 * An alternative method to make an element fill the remaining space.
	 * Distributes space based on the initial width and height of the element
	 *
	 * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
	 */

	.u-md-sizeFillAlt {
		flex: 1 1 auto !important;

	}

	/**
	 * Make an element the width of its parent.
	 */

	.u-md-sizeFull {
		box-sizing: border-box !important;
		width: 100% !important;
	}

	/**
	 * Hide an element
	 */

	.u-md-hide {
		display: none;
	}
}


/**
 * @define utilities
 * Size: breakpoint 3 (large= >1024px)
 */

@media (min-width: $layout-ml) {

	/* Proportional widths: breakpoint 3 (large= >1024px)
		 ========================================================================== */

	/**
	 * Specify the proportional width of an object.
	 * Intentional redundancy build into each set of unit classes.
	 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
	 *
	 * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
	 *    http://git.io/vllMD
	 */

	/* postcss-bem-linter: ignore */
	[class*="u-lg-size"] {
		flex-basis: auto !important; /* 1 */
	}
	.u-lg-size1of12 {
		width: calc(100% * 1 / 12) !important;
	}
	.u-lg-size1of10 {
		width: 10% !important;
	}
	.u-lg-size1of8 {
		width: 12.5% !important;
	}
	.u-lg-size1of6,
	.u-lg-size2of12 {
		width: calc(100% * 1 / 6) !important;
	}
	.u-lg-size1of5,
	.u-lg-size2of10 {
		width: 20% !important;
	}
	.u-lg-size1of4,
	.u-lg-size2of8,
	.u-lg-size3of12 {
		width: 25% !important;
	}
	.u-lg-size3of10 {
		width: 30% !important;
	}
	.u-lg-size1of3,
	.u-lg-size2of6,
	.u-lg-size4of12 {
		width: calc(100% * 1 / 3) !important;
	}
	.u-lg-size3of8 {
		width: 37.5% !important;
	}
	.u-lg-size2of5,
	.u-lg-size4of10 {
		width: 40% !important;
	}
	.u-lg-size5of12 {
		width: calc(100% * 5 / 12) !important;
	}
	.u-lg-size1of2,
	.u-lg-size2of4,
	.u-lg-size3of6,
	.u-lg-size4of8,
	.u-lg-size5of10,
	.u-lg-size6of12 {
		width: 50% !important;
	}
	.u-lg-size7of12 {
		width: calc(100% * 7 / 12) !important;
	}
	.u-lg-size3of5,
	.u-lg-size6of10 {
		width: 60% !important;
	}
	.u-lg-size5of8 {
		width: 62.5% !important;
	}
	.u-lg-size2of3,
	.u-lg-size4of6,
	.u-lg-size8of12 {
		width: calc(100% * 2 / 3) !important;
	}
	.u-lg-size7of10 {
		width: 70% !important;
	}
	.u-lg-size3of4,
	.u-lg-size6of8,
	.u-lg-size9of12 {
		width: 75% !important;
	}
	.u-lg-size4of5,
	.u-lg-size8of10 {
		width: 80% !important;
	}
	.u-lg-size5of6,
	.u-lg-size10of12 {
		width: calc(100% * 5 / 6) !important;
	}
	.u-lg-size7of8 {
		width: 87.5% !important;
	}
	.u-lg-size9of10 {
		width: 90% !important;
	}
	.u-lg-size11of12 {
		width: calc(100% * 11 / 12) !important;
	}

	/* Intrinsic widths
		 ========================================================================== */

	/**
	 * Make an element fill the remaining space.
	 *
	 * 1. Be explicit to work around IE10 bug with shorthand flex - http://git.io/vllC7
	 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes - http://git.io/vllMt
	 */

	.u-lg-sizeFill {
		flex: 1 1 0% !important; /* 1 */
		flex-basis: 0% !important; /* 2 */
	}

	/**
	 * An alternative method to make an element fill the remaining space.
	 * Distributes space based on the initial width and height of the element
	 *
	 * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
	 */

	.u-lg-sizeFillAlt {
		flex: 1 1 auto !important;

	}

	/**
	 * Make an element the width of its parent.
	 */

	.u-lg-sizeFull {
		box-sizing: border-box !important;
		width: 100% !important;
	}

	/**
	 * Hide an element
	 */

	.u-lg-hide {
		display: none;
	}

}


/**
 * @define utilities
 * Size: breakpoint 3 (large= >1024px)
 */

@media (min-width: $layout-xl) {

	/* Proportional widths: breakpoint 3 (large= >1024px)
		 ========================================================================== */

	/**
	 * Specify the proportional width of an object.
	 * Intentional redundancy build into each set of unit classes.
	 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
	 *
	 * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
	 *    http://git.io/vllMD
	 */

	/* postcss-bem-linter: ignore */
	[class*="u-xl-size"] {
		flex-basis: auto !important; /* 1 */
	}
	.u-xl-size1of12 {
		width: calc(100% * 1 / 12) !important;
	}
	.u-xl-size1of10 {
		width: 10% !important;
	}
	.u-xl-size1of8 {
		width: 12.5% !important;
	}
	.u-xl-size1of6,
	.u-xl-size2of12 {
		width: calc(100% * 1 / 6) !important;
	}
	.u-xl-size1of5,
	.u-xl-size2of10 {
		width: 20% !important;
	}
	.u-xl-size1of4,
	.u-xl-size2of8,
	.u-xl-size3of12 {
		width: 25% !important;
	}
	.u-xl-size3of10 {
		width: 30% !important;
	}
	.u-xl-size1of3,
	.u-xl-size2of6,
	.u-xl-size4of12 {
		width: calc(100% * 1 / 3) !important;
	}
	.u-xl-size3of8 {
		width: 37.5% !important;
	}
	.u-xl-size2of5,
	.u-xl-size4of10 {
		width: 40% !important;
	}
	.u-xl-size5of12 {
		width: calc(100% * 5 / 12) !important;
	}
	.u-xl-size1of2,
	.u-xl-size2of4,
	.u-xl-size3of6,
	.u-xl-size4of8,
	.u-xl-size5of10,
	.u-xl-size6of12 {
		width: 50% !important;
	}
	.u-xl-size7of12 {
		width: calc(100% * 7 / 12) !important;
	}
	.u-xl-size3of5,
	.u-xl-size6of10 {
		width: 60% !important;
	}
	.u-xl-size5of8 {
		width: 62.5% !important;
	}
	.u-xl-size2of3,
	.u-xl-size4of6,
	.u-xl-size8of12 {
		width: calc(100% * 2 / 3) !important;
	}
	.u-xl-size7of10 {
		width: 70% !important;
	}
	.u-xl-size3of4,
	.u-xl-size6of8,
	.u-xl-size9of12 {
		width: 75% !important;
	}
	.u-xl-size4of5,
	.u-xl-size8of10 {
		width: 80% !important;
	}
	.u-xl-size5of6,
	.u-xl-size10of12 {
		width: calc(100% * 5 / 6) !important;
	}
	.u-xl-size7of8 {
		width: 87.5% !important;
	}
	.u-xl-size9of10 {
		width: 90% !important;
	}
	.u-xl-size11of12 {
		width: calc(100% * 11 / 12) !important;
	}

	/* Intrinsic widths
		 ========================================================================== */

	/**
	 * Make an element fill the remaining space.
	 *
	 * 1. Be explicit to work around IE10 bug with shorthand flex - http://git.io/vllC7
	 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes - http://git.io/vllMt
	 */

	.u-xl-sizeFill {
		flex: 1 1 0% !important; /* 1 */
		flex-basis: 0% !important; /* 2 */
	}

	/**
	 * An alternative method to make an element fill the remaining space.
	 * Distributes space based on the initial width and height of the element
	 *
	 * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
	 */

	.u-xl-sizeFillAlt {
		flex: 1 1 auto !important;

	}

	/**
	 * Make an element the width of its parent.
	 */

	.u-xl-sizeFull {
		box-sizing: border-box !important;
		width: 100% !important;
	}

	/**
	 * Hide an element
	 */

	.u-xl-hide {
		display: none;
	}

}
